# This is a default definition for inside-mesh canary defaulting
# curl --header "Host: frontend.default.svc.cluster.local" http:// 
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: frontend
  namespace: default
spec:
  gateways:
    - ingressgateway  
    - mesh
  hosts:
    - frontend.default.svc.cluster.local
    - mytraininghostname.com
  http:
  - match:
    - headers:
        app:
          exact: nginx
    route:
    - destination:
        host: nginx.default.svc.cluster.local
  - match:
    - headers:
        app:
          exact: httpd
    route:
    - destination:
        host: httpd.default.svc.cluster.local
  - route:
    - destination:
        host: httpd.default.svc.cluster.local
      weight: 50
    - destination:
        host: nginx.default.svc.cluster.local
      weight: 50

---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: frontend
spec:
  ports:
  - port: 80
    name: http
---
kind: Service
apiVersion: v1
metadata:
  namespace: default
  name: nginx
spec:
  selector:
    app: nginx
  ports:
  - protocol: TCP
    port: 80
    name: http
---
apiVersion: apps/v1 
kind: Deployment
metadata:
  namespace: default
  name: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - name: nginx
        image: nginx:1.7.9
        ports:
        - containerPort: 80
          name: http
---
kind: Service
apiVersion: v1
metadata:
  namespace: default
  name: httpd
spec:
  selector:
    app: httpd
  ports:
  - protocol: TCP
    port: 80
    name: http
---
apiVersion: apps/v1 
kind: Deployment
metadata:
  namespace: default
  name: httpd
spec:
  selector:
    matchLabels:
      app: httpd
  replicas: 1
  template:
    metadata:
      labels:
        app: httpd
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - name: httpd
        image: httpd:latest
        ports:
        - containerPort: 80
          name: http
---
apiVersion: apps/v1 
kind: Deployment
metadata:
  namespace: default
  name: centos
spec:
  selector:
    matchLabels:
      app: centos
  replicas: 1
  template:
    metadata:
      labels:
        app: centos---
apiVersion: apps/v1 
kind: Deployment
metadata:
  namespace: default
  name: centos
spec:
  selector:
    matchLabels:
      app: centos
  replicas: 1
  template:
    metadata:
      labels:
        app: centos
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - name: centos
        image: centos:centos7
        command: ["bash", "-c", "sleep 999999"]
        ports:
        - containerPort: 80
          name: http
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - name: centos
        image: centos:centos7
        command: ["bash", "-c", "sleep 999999"]
        ports:
        - containerPort: 80
          name: http